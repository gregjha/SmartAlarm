if (self.CavalryLogger) { CavalryLogger.start_js(["mRGh0"]); }

__d("ChatTypingIndicators.react",["fbt","ChatTypingIndicator.react","DOM","immutable","MercuryIDs","MercuryThreadInformer","MercuryThreads","MercuryTypingReceiver","MercuryParticipants","React","ReactDOM","SubscriptionsHandler","TooltipData","createObjectFrom","emptyFunction"],(function a(b,c,d,e,f,g,h){__p&&__p();var i=c("MercuryThreads").get(),j=c("React").PropTypes,k=c("React").createClass({displayName:"ChatTypingIndicators",propTypes:{indicatorClass:j.func,indicatorsWillShow:j.func,indicatorsDidShow:j.func,onlineUsers:j.instanceOf(c("immutable").List),rootClassName:j.string,threadID:j.string.isRequired,viewer:j.string.isRequired},getDefaultProps:function l(){return{indicatorClass:c("ChatTypingIndicator.react"),indicatorsWillShow:c("emptyFunction"),indicatorsDidShow:c("emptyFunction")}},getInitialState:function l(){return{typingUserIDs:[]}},componentDidMount:function l(){var m=c("MercuryThreadInformer").getForFBID(this.props.viewer),n=c("MercuryTypingReceiver").getForFBID(this.props.viewer);this._subscriptions=new(c("SubscriptionsHandler"))();this._subscriptions.addSubscriptions(n.addRetroactiveListener("state-changed",this.typingStateChanged),m.subscribe("messages-received",this.messagesReceived))},componentWillReceiveProps:function l(m){if(m.threadID!=this.props.threadID)this.setState({typingUserIDs:[]})},componentWillUpdate:function l(m,n){if(n.typingUserIDs.length>0)this.props.indicatorsWillShow()},componentDidUpdate:function l(){if(this.state.typingUserIDs.length>0)this.props.indicatorsDidShow();c("MercuryParticipants").getMulti(this.state.typingUserIDs,function(m){if(this.isMounted())this.state.typingUserIDs.forEach(function(n){var o=m[n],p=this.refs[n]&&this.refs[n].getBubble();if(p&&o)c("TooltipData").set(c("ReactDOM").findDOMNode(p),this.renderTooltip(o.short_name),"above","left")}.bind(this))}.bind(this))},componentWillUnmount:function l(){this._subscriptions.release()},render:function l(){if(!c("MercuryIDs").isValid(this.props.threadID))return null;var m=i.getThreadMetaNow(this.props.threadID);if(m&&!m.is_subscribed)return null;var n=c("MercuryIDs").isGroupChat(this.props.threadID);return c("React").createElement("div",{className:this.props.rootClassName},this.state.typingUserIDs.map(function(o){return this._renderTypingIndicator(o,!!n)}.bind(this)))},_renderTypingIndicator:function l(m,n){var o=this.props.indicatorClass,p=this.props.onlineUsers!==undefined&&this.props.onlineUsers.includes(c("MercuryIDs").getUserIDFromParticipantID(m));return c("React").createElement(o,{key:m,ref:m,showName:n,userID:m,isOnline:p})},renderTooltip:function l(m){var n=c("DOM").create("span");c("ReactDOM").render(c("React").createElement("span",null,h._("{name} is typing...",[h.param("name",m)])),n);return n},typingStateChanged:function l(m){if(this.props.threadID in m)this.setState({typingUserIDs:m[this.props.threadID].slice().sort()})},messagesReceived:function l(m,n){if(this.props.threadID in n){var o=n[this.props.threadID],p=c("createObjectFrom")(o.map(function(q){return q.author}));this.setState({typingUserIDs:this.state.typingUserIDs.filter(function(q){return!p[q]}).sort()})}}});f.exports=k}),null);