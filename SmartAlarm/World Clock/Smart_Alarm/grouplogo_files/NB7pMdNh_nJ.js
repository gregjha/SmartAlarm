if (self.CavalryLogger) { CavalryLogger.start_js(["Hm1se"]); }

__d("legacy:cookie",["Cookie"],(function a(b,c,d,e,f,g){b.getCookie=c("Cookie").get;b.setCookie=c("Cookie").set;b.clearCookie=c("Cookie").clear}),3);
__d("ServiceWorkerRegistration",["Promise","ClientServiceWorkerMessage","EventListener","Run"],(function a(b,c,d,e,f,g){__p&&__p();var h=!!navigator.serviceWorker,i={};function j(){var l=navigator.serviceWorker;if(!h||!l)throw new Error("serviceWorker is not supported in this browser");return l}var k={isSupported:function l(){return h},registerWorkerIfUnregisteredAfterDD:function l(m){c("Run").onAfterLoad(function(){k.registerWorkerIfUnregistered(m)})},registerWorkerIfUnregistered:function l(m){__p&&__p();if(i[m])return i[m];var n=j();i[m]=new(c("Promise"))(function(o,p){__p&&__p();this.getWorkerRegistration(m).done(function(q){if(!q){var r=c("EventListener").listen(window,"message",function(event){if(event.data&&event.data.command&&event.data.command==="ServiceWorkerInstallError")p()});c("Promise").resolve(n.register(m,{updateViaCache:"all"})).done(function(){r.remove();c("Promise").resolve(n.ready).done(o)})}else o(q)})}.bind(this));i[m].done(function(){i[m]=null});return i[m]},unregisterControllingWorker:function l(){return new(c("Promise"))(function(m,n){var o=new(c("ClientServiceWorkerMessage"))("unregister",{},function(){m(true)});o.sendViaController()})},getWorkerRegistration:function l(m){var n=j();return c("Promise").resolve(n.getRegistration(m))},isAWorkerActivated:function l(){if(!navigator.serviceWorker||!navigator.serviceWorker.getRegistration)return c("Promise").resolve(false);return navigator.serviceWorker.getRegistration().then(function(m){return!!(m&&m.active)})}};f.exports=k}),null);